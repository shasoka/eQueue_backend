from datetime import datetime, timezone
from sqlalchemy import (
    Boolean,
    ForeignKey,
    String,
    Text,
    TIMESTAMP,
    func,
    text,
)
from sqlalchemy.orm import Mapped, mapped_column, relationship
from sqlalchemy.schema import UniqueConstraint

from .base import Base


class User(Base):

    # --- –ü–æ–ª—è ---

    # –¢–æ–∫–µ–Ω –µ–ö—É—Ä—Å–æ–≤
    access_token: Mapped[str] = mapped_column(
        String(255),
        nullable=False,
        unique=True,
    )

    # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –µ–ö—É—Ä—Å–∞—Ö
    ecourses_id: Mapped[int] = mapped_column(
        nullable=False,
        unique=True,
    )

    # ID –≥—Ä—É–ø–ø—ã, –∫ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    group_id: Mapped[int] = mapped_column(
        ForeignKey("groups.id"),
        nullable=True,
    )

    # –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    first_name: Mapped[str] = mapped_column(
        String(255),
        nullable=False,
    )

    # –§–∞–º–∏–ª–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    second_name: Mapped[str] = mapped_column(
        String(255),
        nullable=False,
    )

    # –°—Ç–∞—Ç—É—Å –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤–Ω—É—Ç—Ä–∏ eQueue)
    profile_status_default_val: str = "'–°—Ç—Ä–∞—à–Ω–æ —É—á—É—Å—å ü•≤'"
    profile_status: Mapped[str] = mapped_column(
        String(255),
        nullable=False,
        default=profile_status_default_val,
        server_default=text(profile_status_default_val),
    )

    # –°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è
    profile_pic_url: Mapped[str] = mapped_column(
        String(255),
        nullable=False,
    )

    # –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è —Å—Ä–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è (–≤–Ω—É—Ç—Ä–∏ eQueue)
    created_at: Mapped[datetime] = mapped_column(
        TIMESTAMP(),
        nullable=False,
        default=datetime.utcnow,
        server_default=func.now(),
    )

    # –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è (–≤–Ω—É—Ç—Ä–∏ eQueue)
    updated_at: Mapped[datetime] = mapped_column(
        TIMESTAMP(),
        nullable=False,
        default=datetime.utcnow,
        onupdate=datetime.utcnow,
        server_default=func.now(),
    )

    # --- –°–≤—è–∑–∏ ---

    # One-to-many
    # –û–¥–Ω–∞ –∏ —Ç–∞ –∂–µ –≥—Ä—É–ø–ø–∞ —É –º–Ω–æ–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    group: Mapped["Group"] = relationship(
        "Group",
        back_populates="users",
    )

    # Many-to-one
    # –û–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É –º–Ω–æ–≥–∏—Ö —Ä–∞–±–æ—á–∏—Ö –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤
    workspace_memberships: Mapped[list["WorkspaceMember"]] = relationship(
        "WorkspaceMember",
        back_populates="user",
    )

    # Many-to-one
    # –û–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É –º–Ω–æ–≥–∏—Ö —Å–¥–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π
    submissions: Mapped[list["Submission"]] = relationship(
        "Submission",
        back_populates="user",
    )

    # Many-to-one
    # –û–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ –º–Ω–æ–≥–∏—Ö –æ—á–µ—Ä–µ–¥—è—Ö
    queue_memberships: Mapped[list["QueueMember"]] = relationship(
        "QueueMember",
        back_populates="user",
    )


class Group(Base):

    # --- –ü–æ–ª—è ---

    # –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã
    name: Mapped[str] = mapped_column(
        String(255),
        nullable=False,
        unique=True,
    )

    # --- –°–≤—è–∑–∏ ---

    # Many-to-one
    # –ú–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –æ–¥–Ω–æ–π –∏ —Ç–æ–π –∂–µ –≥—Ä—É–ø–ø–µ
    users: Mapped[list["User"]] = relationship(
        "User",
        back_populates="group",
    )

    # Many-to-one
    # –ú–Ω–æ–≥–æ —Ä–∞–±–æ—á–∏—Ö –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤ —Å –æ–¥–Ω–æ–π –∏ —Ç–æ–π –∂–µ –≥—Ä—É–ø–ø–æ–π
    workspaces: Mapped[list["Workspace"]] = relationship(
        "Workspace",
        back_populates="group",
    )


class Workspace(Base):

    # --- –ü–æ–ª—è ---

    # ID –≥—Ä—É–ø–ø—ã
    group_id: Mapped[int] = mapped_column(
        ForeignKey("groups.id"),
        nullable=False,
    )

    # –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
    # unique = False, —Ç.–∫. –º–æ–∂–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å –¥–≤–∞ —Ä–∞–±–æ—á–∏—Ö –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ —Å
    # –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è–º–∏, –Ω–æ —Å —Ä–∞–∑–Ω—ã–º–∏ group_id
    name: Mapped[str] = mapped_column(
        String(255),
        nullable=False,
    )

    # –°–µ–º–µ—Å—Ç—Ä
    semester: Mapped[int] = mapped_column(
        nullable=False,
    )

    # –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è —Å—Ä–∑–¥–∞–Ω–∏—è —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
    created_at: Mapped[datetime] = mapped_column(
        TIMESTAMP(),
        nullable=False,
        default=datetime.utcnow,
        server_default=func.now(),
    )

    # –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
    updated_at: Mapped[datetime] = mapped_column(
        TIMESTAMP(),
        nullable=False,
        default=datetime.utcnow,
        onupdate=datetime.utcnow,
        server_default=func.now(),
    )

    # --- –°–≤—è–∑–∏ ---

    # One-to-many
    # –û–¥–Ω–∞ –∏ —Ç–∞ –∂–µ –≥—Ä—É–ø–ø–∞ —É –º–Ω–æ–≥–∏—Ö —Ä–∞–±–æ—á–∏—Ö –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤
    group: Mapped["Group"] = relationship(
        "Group",
        back_populates="workspaces",
    )

    # Many-to-one
    # –ú–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –æ–¥–Ω–æ–º –∏ —Ç–æ–º –∂–µ —Ä–∞–±–æ—á–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ
    members: Mapped[list["WorkspaceMember"]] = relationship(
        "WorkspaceMember",
        back_populates="workspace",
    )

    # Many-to-one
    # –ú–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –æ–¥–Ω–æ–º –∏ —Ç–æ–º –∂–µ —Ä–∞–±–æ—á–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ
    subjects: Mapped[list["Subject"]] = relationship(
        "Subject",
        back_populates="workspace",
    )

    # --- –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ ---

    __table_args__ = (
        # –£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –≤ —Ä–∞–º–∫–∞—Ö –æ–¥–Ω–æ–π –≥—Ä—É–ø–ø—ã
        UniqueConstraint(
            "group_id",
            "name",
        ),
    )


class WorkspaceMember(Base):

    # --- –ü–æ–ª—è ---

    # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id: Mapped[int] = mapped_column(
        ForeignKey("users.id"),
        nullable=False,
    )

    # ID —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
    workspace_id: Mapped[int] = mapped_column(
        ForeignKey("workspaces.id"),
        nullable=False,
    )

    # –§–ª–∞–≥ –æ–ø—Ä–µ–¥–µ–ª—è—é—â–∏–π —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —á–ª–µ–Ω –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    is_admin: Mapped[bool] = mapped_column(
        Boolean,
        nullable=False,
        default=False,
        server_default=text("false"),
    )

    # –°—Ç–∞—Ç—É—Å —á–ª–µ–Ω–∞ —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ (pending, approved, rejected)
    status: Mapped[str] = mapped_column(
        String(50),
        nullable=False,
        default="'pending'",
        server_default=text("'pending'"),
    )

    # –î–∞—Ç–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ —Ä–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    # –ü—Ä–∏ –≤—ã—Ö–æ–¥–µ –∑–∞–ø–∏—Å—å –æ–± —ç—Ç–æ–º —á–ª–µ–Ω–µ —É–¥–∞–ª—è–µ—Ç—Å—è, –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –≤—Å—Ç—É–ø–ª–µ–Ω–∏–∏ -
    # –ø–æ—è–≤–ª—è–µ—Ç—Å—è —Å–Ω–æ–≤–∞
    joined_at: Mapped[datetime] = mapped_column(
        TIMESTAMP(),
        nullable=False,
        default=datetime.utcnow,
        server_default=func.now(),
    )

    # --- –°–≤—è–∑–∏ ---

    # One-to-many
    # –û–¥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç —è–≤–ª—è—Ç—å—Å—è —á–ª–µ–Ω–æ–º –º–Ω–æ–≥–∏—Ö —Ä–∞–±–æ—á–∏—Ö –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤
    user: Mapped["User"] = relationship(
        "User",
        back_populates="workspace_memberships",
    )

    # One-to-many
    # –û–¥–Ω–æ —Ä–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –º–Ω–æ–≥–æ —á–ª–µ–Ω–æ–≤
    workspace: Mapped["Workspace"] = relationship(
        "Workspace",
        back_populates="members",
    )

    # --- –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ ---

    __table_args__ = (
        # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ä–∞–±–æ—á–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ
        UniqueConstraint(
            "user_id",
            "workspace_id",
        ),
    )


class Subject(Base):

    # --- –ü–æ–ª—è ---

    # ID —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
    workspace_id: Mapped[int] = mapped_column(
        ForeignKey("workspaces.id"),
        nullable=False,
    )

    # ID –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–∞ –µ–ö—É—Ä—Å–∞—Ö
    ecourses_id: Mapped[int] = mapped_column(
        nullable=True,
    )

    # –°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –Ω–∞ –µ–ö—É—Ä—Å–∞—Ö
    ecourses_link: Mapped[str] = mapped_column(
        String(255),
        nullable=True,
    )

    # –ò–º—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
    professor_name: Mapped[str] = mapped_column(
        String(255),
        nullable=True,
    )

    # –ö–æ–Ω—Ç–∞–∫—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
    professor_contact: Mapped[str] = mapped_column(
        String(255),
        nullable=True,
    )

    # –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –∫ —Å–¥–∞—á–µ —Ä–∞–±–æ—Ç
    professor_requirements: Mapped[str] = mapped_column(
        Text,
        nullable=True,
    )

    # –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞
    name: Mapped[str] = mapped_column(
        String(255),
        nullable=False,
    )

    # --- –°–≤—è–∑–∏ ----

    # One-to-many
    # –û–¥–Ω–æ —Ä–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –º–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    workspace: Mapped["Workspace"] = relationship(
        "Workspace",
        back_populates="subjects",
    )

    # Many-to-one
    # –ú–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏–π –≤ –æ–¥–Ω–æ–º –∏ —Ç–æ–º –∂–µ –ø—Ä–µ–¥–º–µ—Ç–µ
    tasks: Mapped[list["Task"]] = relationship(
        "Task",
        back_populates="subject",
    )

    # One-to-one
    # –û–¥–∏–Ω –ø—Ä–µ–¥–º–µ—Ç –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –æ–¥–Ω—É –æ—á–µ—Ä–µ–¥—å –¥–ª—è —Å–¥–∞—á–∏
    queue: Mapped["Queue"] = relationship(
        "Queue",
        back_populates="subject",
        uselist=False,  # One-to-one
    )

    # --- –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ ---

    __table_args__ = (
        # –£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –∏–º–µ–Ω–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –≤ —Ä–∞–º–∫–∞—Ö –æ–¥–Ω–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
        UniqueConstraint(
            "workspace_id",
            "name",
        ),
        # –£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å ecourses_id –≤ —Ä–∞–º–∫–∞—Ö –æ–¥–Ω–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
        # –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ ecourses_id –ù–ï NULL (—á–∞—Å—Ç–∏—á–Ω–æ –∏–Ω–¥–µ–∫—Å–∏—Ä—É–µ–º–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ)
        UniqueConstraint(
            "workspace_id",
            "ecourses_id",
        ),
    )


class Queue(Base):

    # --- –ü–æ–ª—è ---

    # ID –ø—Ä–µ–¥–º–µ—Ç–∞
    subject_id: Mapped[int] = mapped_column(
        ForeignKey("subjects.id"),
        nullable=False,
        unique=True,  # uq_queue_sid
    )

    # –§–ª–∞–≥ –æ–ø—Ä–µ–¥–µ–ª—è—é—â–∏–π –º–æ–≥—É—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –æ—á–µ—Ä–µ–¥–∏ "–∑–∞–º–æ—Ä–∞–∂–∏–≤–∞—Ç—å" —Å–≤–æ–µ
    # –ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤ –Ω–µ–π
    members_can_freeze: Mapped[bool] = mapped_column(
        Boolean,
        nullable=False,
        default=True,
        server_default=text("true"),
    )

    # --- –°–≤—è–∑–∏ ---

    # One-to-many
    # –û–¥–∏–Ω –ø—Ä–µ–¥–º–µ—Ç –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –æ–¥–Ω—É –æ—á–µ—Ä–µ–¥—å
    subject: Mapped["Subject"] = relationship(
        "Subject",
        back_populates="queue",
    )

    # Many-to-one
    # –ú–Ω–æ–≥–æ —á–ª–µ–Ω–æ–≤ –º–æ–≥—É—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –æ–¥–Ω–æ–π –æ—á–µ—Ä–µ–¥–∏
    members: Mapped[list["QueueMember"]] = relationship(
        "QueueMember",
        back_populates="queue",
    )


class QueueMember(Base):

    # --- –ü–æ–ª—è ---

    # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id: Mapped[int] = mapped_column(
        ForeignKey("users.id"),
        nullable=False,
    )

    # ID –æ—á–µ—Ä–µ–¥–∏
    queue_id: Mapped[int] = mapped_column(
        ForeignKey("queues.id"),
        nullable=False,
    )

    # –í—Ä–µ–º—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –æ—á–µ—Ä–µ–¥—å
    entered_at: Mapped[datetime] = mapped_column(
        TIMESTAMP(),
        nullable=False,
        default=datetime.utcnow,
        server_default=func.now(),
    )

    # –ü–æ–∑–∏—Ü–∏—è –≤ –æ—á–µ—Ä–µ–¥–∏
    position: Mapped[int] = mapped_column(
        nullable=False,
    )

    # –°—Ç–∞—Ç—É—Å —á–ª–µ–Ω–∞ –≤ –æ—á–µ—Ä–µ–¥–∏. –ó–Ω–∞—á–µ–Ω–∏—è: 'active', 'frozen'.
    status: Mapped[str] = mapped_column(
        String(50),
        nullable=False,
        default="'active'",
        server_default=text("'active'"),
    )

    # --- –°–≤—è–∑–∏ ---

    # One-to-many
    # –û–¥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç —è–≤–ª—è—Ç—å—Å—è —á–ª–µ–Ω–æ–º –º–Ω–æ–≥–∏—Ö –æ—á–µ—Ä–µ–¥–µ–π
    user: Mapped["User"] = relationship(
        "User",
        back_populates="queue_memberships",
    )

    # One-to-many
    # –í –æ–¥–Ω–æ–π –æ—á–µ—Ä–µ–¥–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–Ω–æ–≥–æ —á–ª–µ–Ω–æ–≤
    queue: Mapped["Queue"] = relationship(
        "Queue",
        back_populates="members",
    )

    # --- –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ ---

    __table_args__ = (
        # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤ –æ–¥–Ω—É –ø–æ–ø—ã—Ç–∫—É –¥–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –æ—á–µ—Ä–µ–¥—å
        # –û–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –º–æ–∂–µ—Ç –≤—Å—Ç—É–ø–∏—Ç—å –≤ –æ—á–µ—Ä–µ–¥—å –¥–≤–∞–∂–¥—ã
        UniqueConstraint(
            "user_id",
            "queue_id",
        ),
    )


class Task(Base):

    # --- –ü–æ–ª—è ---

    # ID –ø—Ä–µ–¥–º–µ—Ç–∞
    subject_id: Mapped[int] = mapped_column(
        ForeignKey("subjects.id"),
        nullable=False,
    )

    # –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è
    name: Mapped[str] = mapped_column(
        String(255),
        nullable=False,
    )

    # –°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ –µ–ö—É—Ä—Å–∞—Ö
    url: Mapped[str] = mapped_column(
        String(255),
        nullable=True,
    )

    # --- –°–≤—è–∑–∏ ---

    # One-to-many
    # –û–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –ø—Ä–µ–¥–º–µ—Ç –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –º–Ω–æ–≥–æ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π
    subject: Mapped["Subject"] = relationship(
        "Subject",
        back_populates="tasks",
    )

    # Many-to-one
    # –û–¥–Ω–æ –∑–∞–¥–∞–Ω–∏–µ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –º–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫ —Å–¥–∞—á–∏ —Ä–∞–∑–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    submissions: Mapped[list["Submission"]] = relationship(
        "Submission",
        back_populates="task",
    )

    # --- –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ ---

    __table_args__ = (
        # –£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è –≤ —Ä–∞–º–∫–∞—Ö –æ–¥–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
        UniqueConstraint(
            "subject_id",
            "name",
        ),
    )


class Submission(Base):

    # --- –ü–æ–ª—è ---

    # ID –∑–∞–¥–∞–Ω–∏—è
    task_id: Mapped[int] = mapped_column(
        ForeignKey("tasks.id"),
        nullable=False,
    )

    # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id: Mapped[int] = mapped_column(
        ForeignKey("users.id"),
        nullable=False,
    )

    # –í—Ä–µ–º—è —Å–¥–∞—á–∏ –∑–∞–¥–∞–Ω–∏—è
    submitted_at: Mapped[datetime] = mapped_column(
        TIMESTAMP(),
        nullable=False,
        default=datetime.utcnow,
        server_default=func.now(),
    )

    # --- –°–≤—è–∑–∏ ---

    # One-to-many
    # –û–¥–Ω–æ –∑–∞–¥–∞–Ω–∏–µ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –º–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫ —Å–¥–∞—á–∏ —Ä–∞–∑–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    task: Mapped["Task"] = relationship(
        "Task",
        back_populates="submissions",
    )

    # One-to-many
    # –û–¥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –º–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫ —Å–¥–∞—á–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π
    user: Mapped["User"] = relationship(
        "User",
        back_populates="submissions",
    )

    # --- –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ ---

    __table_args__ = (
        # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤ –æ–¥–Ω—É –ø–æ–ø—ã—Ç–∫—É –¥–ª—è —Å–¥–∞—á–∏ –æ–¥–Ω–æ–π —Ä–∞–±–æ—Ç—ã –æ–¥–Ω–∏–º
        # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        UniqueConstraint(
            "user_id",
            "task_id",
        ),
    )
